<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    This file is packaged with "Seed.Module.Targets.nupkg" in "./build" such that any
    Module that references it will embedd in its assembly all assets files and mapping infos.
    Here we use some msbuild properties that would not be evaluated in the `.props` file.
    It also prevents VS from adding / keeping some unnecessary lines in the project file.
  -->

  <PropertyGroup>
    <ModuleDefaultAssetExcludes>$(ModuleDefaultAssetExcludes);**\*$(DefaultLanguageSourceExtension);**\*.resx</ModuleDefaultAssetExcludes>
    <ModuleNoneExcludes>$(BaseIntermediateOutputPath)**\*.props;$(BaseIntermediateOutputPath)**\*.targets</ModuleNoneExcludes>
    <ModuleNoneIncludes>$(ModuleAssetExcludes)</ModuleNoneIncludes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(AppDesignerFolder)' != ''">
    <ModuleDefaultAssetExcludes>$(ModuleDefaultAssetExcludes);$(AppDesignerFolder)\**</ModuleDefaultAssetExcludes>
    <ModuleNoneExcludes>$(ModuleNoneExcludes);$(AppDesignerFolder)\**\*$(DefaultLanguageSourceExtension)</ModuleNoneExcludes>
    <ModuleNoneExcludes>$(ModuleNoneExcludes);$(AppDesignerFolder)\**\*.resx</ModuleNoneExcludes>
    <ModuleNoneIncludes>$(ModuleNoneIncludes);$(AppDesignerFolder)\**</ModuleNoneIncludes>
    <FrontendDirectory>$(MSBuildProjectDirectory)\ClientApp\</FrontendDirectory>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="**\*.cshtml" />
    <None Update="@(None)" CopyToPublishDirectory="Never" />
    <EmbeddedResource Update="@(EmbeddedResource)" CopyToPublishDirectory="Never" />
  </ItemGroup>

  <!-- npm install -->
  <Target Name="ExecuteModuleNPM" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And Exists('$(FrontendDirectory)') And !Exists('$(FrontendDirectory)node_modules') ">
    <Message Text="初始化 npm: $(MSBuildProjectName)" Importance="high" />
    <Exec Command="npm install" ContinueOnError="WarnAndContinue" WorkingDirectory="$(FrontendDirectory)" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" Condition=" Exists('$(FrontendDirectory)') ">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Message Text="发布构建前端: $(MSBuildProjectName)" Importance="high" />
    <Exec WorkingDirectory="$(FrontendDirectory)" Command="npm install" />
    <Exec WorkingDirectory="$(FrontendDirectory)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(FrontendDirectory)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <Target Name="EmbeddModuleAssets" AfterTargets="AfterResolveReferences">
    <RemoveDuplicates Inputs="@(EmbeddedResource)">
      <Output TaskParameter="Filtered" ItemName="ModuleAssetFiles"/>
    </RemoveDuplicates>

    <ItemGroup>
      <ModuleAssets Include=".Modules\$(MSBuildProjectName)\%(ModuleAssetFiles.RelativeDir)%(Filename)%(Extension)|%(ModuleAssetFiles.FullPath)" Condition="'%(ModuleAssetFiles.Link)' == '' and '%(ModuleAssetFiles.Filename)' != ''"/>
      <ModuleAssets Include=".Modules\$(MSBuildProjectName)\%(ModuleAssetFiles.Link)|%(ModuleAssetFiles.FullPath)" Condition="'%(ModuleAssetFiles.Link)' != '' and '%(ModuleAssetFiles.Filename)' != ''" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="@(EmbeddedResource)" />
      <EmbeddedResource Include="@(ModuleAssetFiles)" />
      <EmbeddedResource Update="@(EmbeddedResource)" Condition="'%(EmbeddedResource.Link)' == '' and '%(Extension)' != '.resx'">
        <LogicalName>$([System.String]::new('$(MSBuildProjectName).%(RelativeDir)%(FileName)%(Extension)').Replace('\', '>').Replace('/', '>'))</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Update="@(EmbeddedResource)" Condition="'%(EmbeddedResource.Link)' != '' and '%(Extension)' != '.resx'">
        <LogicalName>$([System.String]::new('$(MSBuildProjectName).%(EmbeddedResource.Link)').Replace('\', '>').Replace('/', '>'))</LogicalName>
      </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
      <AssemblyAttribute Include="Seed.Modules.Manifest.ModuleMarkerAttribute">
        <_Parameter1>$(MSBuildProjectName)</_Parameter1>
      </AssemblyAttribute>
      <AssemblyAttribute Include="Seed.Modules.Manifest.ModuleAssetAttribute">
        <_Parameter1>%(ModuleAssets.Identity)</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>

  <Target Name="UpdateModuleAssets" AfterTargets="CreateManifestResourceNames">
    <ItemGroup>
      <EmbeddedResource Update="@(EmbeddedResource)" Condition="'%(EmbeddedResource.WithCulture)' == 'true'">
        <WithCulture>false</WithCulture>
        <Culture></Culture>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <Target Name="GetModuleProject" Returns="@(ModuleProject)">
    <ItemGroup>
      <ModuleProject Include="$(MSBuildProjectFullPath)" />
    </ItemGroup>
  </Target>

</Project>
